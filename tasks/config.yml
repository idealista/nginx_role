---

- name: NGINX | Ensure nginx group
  group:
    name: "{{ nginx_group }}"
    system: true
    state: present

- name: NGINX | Configuring user groups
  user:
    name: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    groups: "{{ nginx_groups|join(',') }}"
    system: true
    shell: "{{ nginx_shell }}"
    create_home: false

- name: NGINX | Create log directory
  file:
    path: "{{ nginx_log_path }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0750"

- name: NGINX | Update conf directory owner
  file:
    name: "{{ nginx_conf_path }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0750"

- name: NGINX | Copy server config
  template:
    src: "{{ nginx_conf_template_path }}/nginx.conf.j2"
    dest: "{{ nginx_conf }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0640"
  notify: restart nginx

- name: NGINX | Create config directories
  file:
    path: "{{ nginx_conf_path }}/{{ item }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: "0750"
  loop:
    - sites-available
    - sites-enabled
    - plugins
    - extra-conf

- name: NGINX | Copy logrotate config
  template:
    src: "{{ nginx_logrotate_template_path }}"
    dest: /etc/logrotate.d/nginx
    mode: 0644
    owner: root
    group: root
  when: nginx_logrotate_enabled

- name: NGINX | Configure SSL
  block:
    - name: NGINX | Create certificates directory
      file:
        path: "{{ nginx_conf_path }}/{{ item }}"
        state: directory
        owner: "{{ nginx_user }}"
        group: "{{ nginx_group }}"
      loop:
        - certificates

    - name: NGINX | Import certificates
      copy:
        src: "{{ item }}"
        dest: "{{ nginx_conf_path }}/certificates/{{ item | basename | regex_replace('vault_') }}"
        owner: "{{ nginx_user }}"
        group: "{{ nginx_group }}"
        mode: 0640
      with_fileglob:
        - "{{ nginx_certificates_path }}/*"
      notify: reload nginx
  when: nginx_ssl_enabled

- name: NGINX | Copy servers files
  copy:
    src: "{{ item }}"
    dest: "{{ nginx_conf_path }}/sites-available/{{ item | basename }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0640
  with_fileglob:
    - "{{ nginx_extra_servers_path }}/*"
  notify: reload nginx

- name: NGINX | Copy servers templates
  template:
    src: "{{ item }}"
    dest: "{{ nginx_conf_path }}/sites-available/{{ item | basename }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0640
  with_fileglob:
    - "{{ nginx_extra_servers_template_path }}/*"
  notify: reload nginx

- name: NGINX | Set servers files loaded var
  find:
    paths: "{{ nginx_extra_servers_path }}"
    file_type: file
  delegate_to: localhost
  become: false
  register: servers_files_loaded

- name: NGINX | Set servers templates loaded var
  find:
    paths: "{{ nginx_extra_servers_template_path }}"
    file_type: file
  delegate_to: localhost
  become: false
  register: servers_templates_loaded

- name: NGINX | Set enabled servers var (1/2)
  set_fact:
    nginx_template_servers: "{{ servers_templates_loaded.files | map(attribute='path') | map('basename') | list }}"
    nginx_file_servers: "{{ servers_files_loaded.files | map(attribute='path') | map('basename') | list }}"

- name: NGINX | Set enabled servers var (2/2)
  set_fact:
    nginx_available_servers: "{{ nginx_template_servers | union(nginx_file_servers) | union(['prometheus']) }}"

- name: NGINX | List all servers in path
  find:
    paths: "{{ nginx_conf_path }}/sites-available"
    file_type: file
  register: all_servers_available

- name: NGINX | Remove old servers enabled
  file:
    path: "{{ nginx_conf_path }}/sites-enabled/{{ item }}"
    state: absent
  with_items:
    - "{{ all_servers_available.files | map(attribute='path') |  map('basename') | list | difference(nginx_available_servers) }}"
  notify: reload nginx

- name: NGINX | Remove old servers available
  file:
    path: "{{ nginx_conf_path }}/sites-available/{{ item }}"
    state: absent
  with_items:
    - "{{ all_servers_available.files | map(attribute='path') |  map('basename') | list | difference(nginx_available_servers) }}"

- name: NGINX | Enable servers templates
  file:
    src: "{{ nginx_conf_path }}/sites-available/{{ item | basename }}"
    dest: "{{ nginx_conf_path }}/sites-enabled/{{ item | basename }}"
    state: link
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
  with_fileglob:
    - "{{ nginx_extra_servers_path }}/*"
    - "{{ nginx_extra_servers_template_path }}/*"
  notify: reload nginx
